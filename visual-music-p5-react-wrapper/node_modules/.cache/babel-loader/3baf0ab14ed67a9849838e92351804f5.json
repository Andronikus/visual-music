{"ast":null,"code":"var _jsxFileName = \"/Users/Askat/LEARNING/visual-music/visual-music-p5-react-wrapper/src/components/SoundPlayer/SoundPlayer.component.jsx\";\n\n/************************************************************\n    Main component for sound controls.\n    Allows user to control the uploaded sound file.\n    Current features:\n    1.  Load sound file\n    2.  Play/Pause song\n    3.  Change volume\n\n    TODO:\n    1.  Implement slider for the sound file buffer/duration - allow users to control\n        the part of the song to be played.\n************************************************************/\nimport React from \"react\";\nimport \"./SoundPlayer.styles.css\";\n/***********************************************************\n    Parameters (src/pages/App/App.js):\n    state:\n    1. volume\n    2. buttonText\n\n    functions:\n    1.  onPlayPress\n    2.  onVolumeChange\n    3.  onFileUpload\n*************************************************************/\n\nconst SoundPlayer = ({\n  volume,\n  onPlayPress,\n  onVolumeChange,\n  onFileUpload,\n  buttonText,\n  isSongLoaded\n}) => React.createElement(\"div\", {\n  className: \"soundplayer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"file\",\n  accept: \"audio/*\",\n  name: \"file\",\n  onChange: onFileUpload,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"soundplayer-controls\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"control-button\",\n  onClick: onPlayPress,\n  disabled: !isSongLoaded,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, buttonText)), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"Volume\"), React.createElement(\"input\", {\n  type: \"range\",\n  name: \"volume\",\n  value: volume,\n  min: \"0.0\",\n  max: \"1.0\",\n  step: \"0.1\",\n  onChange: onVolumeChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}))));\n\nexport default SoundPlayer;","map":{"version":3,"sources":["/Users/Askat/LEARNING/visual-music/visual-music-p5-react-wrapper/src/components/SoundPlayer/SoundPlayer.component.jsx"],"names":["React","SoundPlayer","volume","onPlayPress","onVolumeChange","onFileUpload","buttonText","isSongLoaded"],"mappings":";;AAAA;;;;;;;;;;;;AAaA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAEA;;;;;;;;;;;;AAWA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,WAFmB;AAGnBC,EAAAA,cAHmB;AAInBC,EAAAA,YAJmB;AAKnBC,EAAAA,UALmB;AAMnBC,EAAAA;AANmB,CAAD,KAQlB;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,MAAM,EAAC,SAA1B;AAAoC,EAAA,IAAI,EAAC,MAAzC;AAAgD,EAAA,QAAQ,EAAEF,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,SAAS,EAAC,gBADZ;AAEE,EAAA,OAAO,EAAEF,WAFX;AAGE,EAAA,QAAQ,EAAE,CAACI,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKGD,UALH,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,EAAA,IAAI,EAAC,OADP;AAEE,EAAA,IAAI,EAAC,QAFP;AAGE,EAAA,KAAK,EAAEJ,MAHT;AAIE,EAAA,GAAG,EAAC,KAJN;AAKE,EAAA,GAAG,EAAC,KALN;AAME,EAAA,IAAI,EAAC,KANP;AAOE,EAAA,QAAQ,EAAEE,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAVF,CAFF,CARF;;AAoCA,eAAeH,WAAf","sourcesContent":["/************************************************************\n    Main component for sound controls.\n    Allows user to control the uploaded sound file.\n    Current features:\n    1.  Load sound file\n    2.  Play/Pause song\n    3.  Change volume\n\n    TODO:\n    1.  Implement slider for the sound file buffer/duration - allow users to control\n        the part of the song to be played.\n************************************************************/\n\nimport React from \"react\";\nimport \"./SoundPlayer.styles.css\";\n\n/***********************************************************\n    Parameters (src/pages/App/App.js):\n    state:\n    1. volume\n    2. buttonText\n\n    functions:\n    1.  onPlayPress\n    2.  onVolumeChange\n    3.  onFileUpload\n*************************************************************/\nconst SoundPlayer = ({\n  volume,\n  onPlayPress,\n  onVolumeChange,\n  onFileUpload,\n  buttonText,\n  isSongLoaded\n}) => (\n  <div className=\"soundplayer\">\n    <input type=\"file\" accept=\"audio/*\" name=\"file\" onChange={onFileUpload} />\n    <div className=\"soundplayer-controls\">\n      <div>\n        <button\n          className=\"control-button\"\n          onClick={onPlayPress}\n          disabled={!isSongLoaded}\n        >\n          {buttonText}\n        </button>\n      </div>\n      <div>\n        <label>Volume</label>\n        <input\n          type=\"range\"\n          name=\"volume\"\n          value={volume}\n          min=\"0.0\"\n          max=\"1.0\"\n          step=\"0.1\"\n          onChange={onVolumeChange}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default SoundPlayer;\n"]},"metadata":{},"sourceType":"module"}
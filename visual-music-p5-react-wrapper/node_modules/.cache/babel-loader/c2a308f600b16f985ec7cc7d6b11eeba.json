{"ast":null,"code":"var _jsxFileName = \"/Users/Askat/LEARNING/visual-music/visual-music-p5-react-wrapper/src/components/SoundPlayer/SoundPlayer.component.jsx\";\n\n/************************************************************\n    Main component for sound controls.\n    Allows user to control the uploaded sound file.\n    Current features:\n    1.  Load sound file\n    2.  Play/Pause song\n    3.  Change volume\n\n    TODO:\n    1.  Implement slider for the sound file buffer/duration - allow users to control\n        the part of the song to be played.\n************************************************************/\nimport React from 'react';\nimport './SoundPlayer.styles.css';\n/***********************************************************\n    Parameters (src/pages/App/App.js):\n    state:\n    1. volume\n    2. buttonText\n\n    functions:\n    1.  onPlayPress\n    2.  onVolumeChange\n    3.  onFileUpload\n*************************************************************/\n\nconst SoundPlayer = ({\n  volume,\n  onPlayPress,\n  onVolumeChange,\n  onFileUpload,\n  buttonText,\n  isSongLoaded\n}) => React.createElement(\"div\", {\n  className: \"soundplayer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"file\",\n  accept: \"audio/*\",\n  name: \"file\",\n  onChange: onFileUpload,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"soundplayer-controls\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"control-button\",\n  onClick: onPlayPress,\n  disabled: !isSongLoaded,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, buttonText)), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"Volume\"), React.createElement(\"input\", {\n  type: \"range\",\n  name: \"volume\",\n  value: volume,\n  min: \"0.0\",\n  max: \"1.0\",\n  step: \"0.1\",\n  onChange: onVolumeChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}))));\n\nexport default SoundPlayer;","map":{"version":3,"sources":["/Users/Askat/LEARNING/visual-music/visual-music-p5-react-wrapper/src/components/SoundPlayer/SoundPlayer.component.jsx"],"names":["React","SoundPlayer","volume","onPlayPress","onVolumeChange","onFileUpload","buttonText","isSongLoaded"],"mappings":";;AAAA;;;;;;;;;;;;AAaA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAEA;;;;;;;;;;;;AAWA,MAAMC,WAAW,GAAG,CAAC;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,WAFoB;AAGpBC,EAAAA,cAHoB;AAIpBC,EAAAA,YAJoB;AAKpBC,EAAAA,UALoB;AAMpBC,EAAAA;AANoB,CAAD,KAQnB;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,MAAM,EAAC,SAA1B;AAAoC,EAAA,IAAI,EAAC,MAAzC;AAAgD,EAAA,QAAQ,EAAEF,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAEC;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AACC,EAAA,SAAS,EAAC,gBADX;AAEC,EAAA,OAAO,EAAEF,WAFV;AAGC,EAAA,QAAQ,EAAE,CAACI,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKED,UALF,CADD,CADD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC;AACC,EAAA,IAAI,EAAC,OADN;AAEC,EAAA,IAAI,EAAC,QAFN;AAGC,EAAA,KAAK,EAAEJ,MAHR;AAIC,EAAA,GAAG,EAAC,KAJL;AAKC,EAAA,GAAG,EAAC,KALL;AAMC,EAAA,IAAI,EAAC,KANN;AAOC,EAAA,QAAQ,EAAEE,cAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,CAVD,CAFD,CARD;;AAoCA,eAAeH,WAAf","sourcesContent":["/************************************************************\n    Main component for sound controls.\n    Allows user to control the uploaded sound file.\n    Current features:\n    1.  Load sound file\n    2.  Play/Pause song\n    3.  Change volume\n\n    TODO:\n    1.  Implement slider for the sound file buffer/duration - allow users to control\n        the part of the song to be played.\n************************************************************/\n\nimport React from 'react';\nimport './SoundPlayer.styles.css';\n\n/***********************************************************\n    Parameters (src/pages/App/App.js):\n    state:\n    1. volume\n    2. buttonText\n\n    functions:\n    1.  onPlayPress\n    2.  onVolumeChange\n    3.  onFileUpload\n*************************************************************/\nconst SoundPlayer = ({\n\tvolume,\n\tonPlayPress,\n\tonVolumeChange,\n\tonFileUpload,\n\tbuttonText,\n\tisSongLoaded\n}) => (\n\t<div className='soundplayer'>\n\t\t<input type='file' accept='audio/*' name='file' onChange={onFileUpload} />\n\t\t<div className='soundplayer-controls'>\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclassName='control-button'\n\t\t\t\t\tonClick={onPlayPress}\n\t\t\t\t\tdisabled={!isSongLoaded}\n\t\t\t\t>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label>Volume</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='range'\n\t\t\t\t\tname='volume'\n\t\t\t\t\tvalue={volume}\n\t\t\t\t\tmin='0.0'\n\t\t\t\t\tmax='1.0'\n\t\t\t\t\tstep='0.1'\n\t\t\t\t\tonChange={onVolumeChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nexport default SoundPlayer;\n"]},"metadata":{},"sourceType":"module"}